extend type Query {
  entity_type(id: ID): [EntityType!]
  entity(id: ID): [Entity!]
}

# extend type Mutation {
#   createEntityType(entity_type: CreateEntityTypeInput!): MutateEntityTypeResult
#   updateEntityType(entity_type: UpdateEntityTypeInput!): MutateEntityTypeResult
#   deleteEntityType(id: ID!): DeleteEntityTypeResult
# }

type EntityType {
  id: ID!
  value: String!
  created_at: String!
  updated_at: String!
}

type Entity {
  id: ID!
  name: String!
  entity_type: EntityType!
  children: [Entity!]
  address: [Address!]
  created_at: String!
  updated_at: String!
}

# input CreateEntityTypeInput {
#   value
# }

# input UpdateEntityTypeInput {
#   id
#   value
# }

# union MutateEntityTypeResult = EntityType | ValidationError | BaseError
# union DeleteEntityTypeResult = Success | ValidationError | BaseError
